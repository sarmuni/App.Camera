//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace APP.Camera.Application.APPCUIS
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "CUISServiceSoap", Namespace = "http://tempuri.org/wsCUIS/Service1")]
    public partial class CUISService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback validatePasswordOperationCompleted;

        private System.Threading.SendOrPostCallback AuthenticateUserOperationCompleted;

        private bool useDefaultCredentialsSetExplicitly;

        /// <remarks/>
        public CUISService()
        {
            this.Url = global::APP.Camera.Application.Properties.Settings.Default.APP_Sample_Application_APPCUIS_CUISService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        public new string Url
        {
            get
            {
                return base.Url;
            }
            set
            {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                            && (this.useDefaultCredentialsSetExplicitly == false))
                            && (this.IsLocalFileSystemWebService(value) == false)))
                {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }

        public new bool UseDefaultCredentials
        {
            get
            {
                return base.UseDefaultCredentials;
            }
            set
            {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }

        /// <remarks/>
        public event validatePasswordCompletedEventHandler validatePasswordCompleted;

        /// <remarks/>
        public event AuthenticateUserCompletedEventHandler AuthenticateUserCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsCUIS/Service1/validatePassword", RequestNamespace = "http://tempuri.org/wsCUIS/Service1", ResponseNamespace = "http://tempuri.org/wsCUIS/Service1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool validatePassword(string UserName, string UserPssw)
        {
            object[] results = this.Invoke("validatePassword", new object[] {
                        UserName,
                        UserPssw});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void validatePasswordAsync(string UserName, string UserPssw)
        {
            this.validatePasswordAsync(UserName, UserPssw, null);
        }

        /// <remarks/>
        public void validatePasswordAsync(string UserName, string UserPssw, object userState)
        {
            if ((this.validatePasswordOperationCompleted == null))
            {
                this.validatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidatePasswordOperationCompleted);
            }
            this.InvokeAsync("validatePassword", new object[] {
                        UserName,
                        UserPssw}, this.validatePasswordOperationCompleted, userState);
        }

        private void OnvalidatePasswordOperationCompleted(object arg)
        {
            if ((this.validatePasswordCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validatePasswordCompleted(this, new validatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/wsCUIS/Service1/AuthenticateUser", RequestNamespace = "http://tempuri.org/wsCUIS/Service1", ResponseNamespace = "http://tempuri.org/wsCUIS/Service1", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthenticateUser(string UserName, string ApplicationID)
        {
            object[] results = this.Invoke("AuthenticateUser", new object[] {
                        UserName,
                        ApplicationID});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void AuthenticateUserAsync(string UserName, string ApplicationID)
        {
            this.AuthenticateUserAsync(UserName, ApplicationID, null);
        }

        /// <remarks/>
        public void AuthenticateUserAsync(string UserName, string ApplicationID, object userState)
        {
            if ((this.AuthenticateUserOperationCompleted == null))
            {
                this.AuthenticateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateUserOperationCompleted);
            }
            this.InvokeAsync("AuthenticateUser", new object[] {
                        UserName,
                        ApplicationID}, this.AuthenticateUserOperationCompleted, userState);
        }

        private void OnAuthenticateUserOperationCompleted(object arg)
        {
            if ((this.AuthenticateUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateUserCompleted(this, new AuthenticateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }

        private bool IsLocalFileSystemWebService(string url)
        {
            if (((url == null)
                        || (url == string.Empty)))
            {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024)
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
            {
                return true;
            }
            return false;
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void validatePasswordCompletedEventHandler(object sender, validatePasswordCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal validatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    public delegate void AuthenticateUserCompletedEventHandler(object sender, AuthenticateUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1099.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AuthenticateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591